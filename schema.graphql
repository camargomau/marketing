type Query {
	readBrand(id: Int): [Brand]
	readBrandSocial(id: Int): [BrandSocial]
	readSocialNetwork(id: Int): [SocialNetwork]
	readTier(id: Int): [Tier]
}

type Mutation {
	createBrand(input: BrandInput!): Brand!
	deleteBrand(id: Int!): Brand!
	updateBrand(id: Int!, input: BrandInput!): Brand!

	createBrandSocial(input: BrandSocialInput!): BrandSocial!
	deleteBrandSocial(id: Int!): BrandSocial!
	updateBrandSocial(id: Int!, input: BrandSocialInput!): BrandSocial!

	createSocialNetwork(input: SocialNetworkInput!): SocialNetwork!
	deleteSocialNetwork(id: Int!): SocialNetwork!
	updateSocialNetwork(id: Int!, input: SocialNetworkInput!): SocialNetwork!

	createTier(input: TierInput!): Tier!
	deleteTier(id: Int!): Tier!
	updateTier(id: Int!, input: TierInput!): Tier!
}

type Brand {
	id: ID
	"""
	The brand's name
	@example "Microsoft"
	"""
	name: String
	"""
	The brand's login email
	@example "microsoft@outlook.com"
	"""
	email: String
	"""
	The password's hash
	@example "5e884898da2804"
	"""
	passwordHash: String
	"""
	The brand's phone number
	@example "555896448"
	"""
	phone: String
	"""
	The brand's payment tier (fk)
	"""
	fkTier: Int
	"""
	The brand's payment tier (actual)
	"""
	tier: Tier
	"""
	Whether the brand has a due payment or not
	@example false
	"""
	paymentDue: Boolean
}

input BrandInput {
	name: String
	email: String
	passwordHash: String
	phone: String
	fkTier: Int
	paymentDue: Boolean
}

type BrandComment {
	id: ID
	fkUserPost: Int
	userPost: UserPost
	dateTime: String
	publicReaction: Float
}

input BrandCommentInput {
	fkUserPost: Int
	dateTime: String
	publicReaction: Float
}

type BrandPost {
	id: ID
	fkBrandSocial: Int
	brandSocial: BrandSocial
	dateTime: String
	publicReaction: Float
}

input BrandPostInput {
	fkBrandSocial: Int
	dateTime: String
	publicReaction: Float
}

type BrandSocial {
	id: ID
	"""
	The brand to which this account belongs (fk)
	"""
	fkBrand: Int
	"""
	The brand to which this account belongs (actual)
	"""
	brand: Brand
	"""
	The social network for this account (fk)
	"""
	fkSocialNetwork: Int
	"""
	The social network for this account (actual)
	"""
	socialNetwork: SocialNetwork
	"""
	The account's username
	@example "microsoft"
	"""
	username: String
	"""
	The account's creation date
	@example "2012-08-28"
	"""
	creationDate: String
}

input BrandSocialInput {
	fkBrand: Int
	fkSocialNetwork: Int
	username: String
	creationDate: String
}

type Country {
	id: ID
	name: String
}

input CountryInput {
	name: String
}

type Interaction {
	id: ID
	amount: Int
	fkInteractionType: Int
	interactionType: InteractionType
	fkBrandPost: Int
	brandPost: BrandPost
	fkBrandComment: Int
	brandComment: BrandComment
	fkUserPost: Int
	userPost: UserPost
	fkUserComment: Int
	userComment: UserComment
}

input InteractionInput {
	amount: Int
	fkInteractionType: Int
	fkBrandPost: Int
	fkBrandComment: Int
	fkUserPost: Int
	fkUserComment: Int
}

type InteractionType {
	id: ID
	name: String
}

input InteractionTypeInput {
	name: String
}

type Lexical {
	id: ID
	fkBrandSocial: Int
	brandSocial: BrandSocial
	fkWordTrend: Int
	wordTrend: WordTrend
	frequency: Int
}

input LexicalInput {
	fkBrandSocial: Int
	fkWordTrend: Int
	frequency: Int
}

type SocialNetwork {
	id: ID
	"""
	The social network's name
	@example "Reddit"
	"""
	name: String
}

input SocialNetworkInput {
	name: String
}

type Tier {
	id: ID
	"""
	The tier's name
	@example "Basic"
	"""
	name: String
	"""
	The tier's price per month, in cents
	@example "100"
	"""
	price: Int
}

input TierInput {
	name: String
	price: Int
}

type User {
	id: ID
	name: String
	fkCountry: Int
	country: Country
}

input UserInput {
	name: String
	fkCountry: Int
}

type UserBrand {
	id: ID
	fkUser: Int
	user: User
	fkBrand: Int
	brand: Brand
	sentiment: Float
}

input UserBrandInput {
	fkUser: Int
	fkBrand: Int
	sentiment: Float
}

type UserComment {
	id: ID
	fkBrandPost: Int
	brandPost: BrandPost
	fkUser: Int
	user: User
	dateTime: String
	sentiment: Float
}

input USerCommentInput {
	fkBrandPost: Int
	fkUser: Int
	dateTime: String
	sentiment: Float
}

type UserPost {
	id: ID
	fkUserBrand: Int
	userBrand: UserBrand
	fkSocialNetwork: Int
	socialNetwork: SocialNetwork
	dateTime: String
	sentiment: Float
}

input UserPostInput {
	fkUserBrand: Int
	fkSocialNetwork: Int
	dateTime: String
	sentiment: Float
}

type UserSocial {
	id: ID
	fkUser: Int
	user: User
	fkSocialNetwork: Int
	socialNetwork: SocialNetwork
	username: String
	creationDate: String
}

input UserSocialInput {
	fkUser: Int
	fkSocialNetwork: Int
	username: String
	creationDate: String
}

type WordTrend {
	id: ID
	word: String
	scoreWeek: Int
	scoreMonth: Int
	scoreYear: Int
}

input WordTrendInput {
	word: String
	scoreWeek: Int
	scoreMonth: Int
	scoreYear: Int
}
